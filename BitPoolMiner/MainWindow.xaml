<Window x:Name="MainWindow1" 
        x:Class="BitPoolMiner.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converter="clr-namespace:BitPoolMiner.Utils.CommandConverter"
        xmlns:viewmodels="clr-namespace:BitPoolMiner.ViewModels"
        xmlns:views="clr-namespace:BitPoolMiner.Views"
        xmlns:featureTouring="clr-namespace:ThinkSharp.FeatureTouring;assembly=ThinkSharp.FeatureTour"
        xmlns:featureTourElements="clr-namespace:BitPoolMiner.Utils.FeatureTour"
        mc:Ignorable="d"
        Title="BITPOOL MINER" 
        HorizontalAlignment="Left" 
        VerticalAlignment="Top" 
        Background="#FF1a1a1a" 
        ResizeMode="CanMinimize"
        Closing="MainWindow_Closing"
        BorderBrush="Black"
        WindowStartupLocation="CenterScreen"
        DataContext="{StaticResource MainWindowViewModel}"
        Icon="Resources/Images/bitpool.png">

    <!--Define Views-->
    <Window.Resources>

        <!-- Style - Left Menu - Buttons -->
        <Style x:Key = "buttonStyleLeftMenu" TargetType = "Button">
            <Setter Property = "Foreground" Value = "#9f9f9f" />
            <Setter Property = "HorizontalContentAlignment" Value = "Left" />
            <Setter Property = "FontSize" Value = "12" />
            <Setter Property = "Width" Value = "270" />
            <Setter Property = "Height" Value = "50" />
            <Setter Property = "FontWeight" Value = "Bold" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="borderButtonStyleLeftMenu" BorderThickness="0,0,0,1" Padding="10" BorderBrush="#444444">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#262626" TargetName="borderButtonStyleLeftMenu" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style - Left Menu - Label Grey -->
        <Style x:Key = "labelStyleLeftMenuGrey" TargetType = "Label">
            <Setter Property = "Foreground" Value = "#9f9f9f" />
            <Setter Property = "FontSize" Value = "12" />
            <Setter Property = "Padding" Value = "4" />
        </Style>

        <!-- Style - Left Menu - Label Grey Small -->
        <Style x:Key = "labelStyleLeftMenuGreySmall" TargetType = "Label">
            <Setter Property = "FontSize" Value = "10" />
            <Setter Property = "Padding" Value = "4" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsOnline}" Value="True">
                    <Setter Property="Foreground" Value="#ffffff"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsOnline}" Value="False">
                    <Setter Property="Foreground" Value="#ffffff"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Style - Header - Border Mining Status -->
        <Style x:Key = "borderStyleHeaderMiningStatus" TargetType = "Border">
            <Setter Property = "BorderThickness" Value = "1" />
            <Setter Property = "Padding" Value = "1 1 1 1" />
            <Setter Property = "Margin" Value = "4 4 4 4" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={StaticResource MainWindowViewModel}, Path=MiningStatus, UpdateSourceTrigger=PropertyChanged}" Value="online">
                    <Setter Property="BorderBrush" Value="#2c97de"/>
                    <Setter Property="Background" Value="#2c97de"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={StaticResource MainWindowViewModel}, Path=MiningStatus, UpdateSourceTrigger=PropertyChanged}" Value="offline">
                    <Setter Property="BorderBrush" Value="#cc3e4a"/>
                    <Setter Property="Background" Value="#cc3e4a"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Style - Left Menu - Border Grey Small -->
        <Style x:Key = "borderStyleLeftMenuGreySmall" TargetType = "Border">
            <Setter Property = "BorderThickness" Value = "1" />
            <Setter Property = "Padding" Value = "4 0 4 0" />
            <Setter Property = "Margin" Value = "4 2 2 0" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsOnline}" Value="True">
                    <Setter Property="BorderBrush" Value="#2c97de"/>
                    <Setter Property="Background" Value="#2c97de"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsOnline}" Value="False">
                    <Setter Property="BorderBrush" Value="#cc3e4a"/>
                    <Setter Property="Background" Value="#cc3e4a"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Style - Header - Border CoinType -->
        <Style x:Key = "borderStyleHeaderCoinType" TargetType = "Border">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsOnline}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsOnline}" Value="False">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Style - Footer - Start Button -->
        <Style x:Key = "buttonStyleFooterStart" TargetType = "Button">
            <Setter Property= "Background" Value = "#2c97de" />
            <Setter Property = "Foreground" Value = "#FFFFFF" />
            <Setter Property = "HorizontalContentAlignment" Value = "Center" />
            <Setter Property = "FontSize" Value = "25" />
            <Setter Property = "FontWeight" Value = "Bold" />
            <Setter Property = "Padding" Value = "5" />
            <Setter Property = "Margin" Value = "40 5 5 5" />
        </Style>

        <!-- Style - Footer - Stop Button -->
        <Style x:Key = "buttonStyleFooterStop" TargetType = "Button">
            <Setter Property= "Background" Value = "#2c97de" />
            <Setter Property = "Foreground" Value = "#FFFFFF" />
            <Setter Property = "HorizontalContentAlignment" Value = "Center" />
            <Setter Property = "FontSize" Value = "25" />
            <Setter Property = "FontWeight" Value = "Bold" />
            <Setter Property = "Padding" Value = "5" />
            <Setter Property = "Margin" Value = "5" />
        </Style>

        <!-- Style - Footer - Label White -->
        <Style x:Key = "labelStyleFooterWhite" TargetType = "Label">
            <Setter Property = "Foreground" Value = "#FFFFFF" />
            <Setter Property = "FontSize" Value = "12" />
            <Setter Property = "Padding" Value = "5" />
            <Setter Property = "FontWeight" Value = "Bold" />
        </Style>

        <!-- Style - Footer - Label Grey -->
        <Style x:Key = "labelStyleFooterGrey" TargetType = "Label">
            <Setter Property = "Foreground" Value = "#646464" />
            <Setter Property = "FontSize" Value = "12" />
            <Setter Property = "Padding" Value = "5" />
        </Style>

        <DataTemplate x:Name="gettingStartedTemplate" DataType="{x:Type viewmodels:GettingStartedViewModel}">
            <views:GettingStartedView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="accountViewTemplate" DataType="{x:Type viewmodels:AccountViewModel}">
            <views:AccountView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="monitorViewTemplate" DataType="{x:Type viewmodels:MonitorViewModel}">
            <views:MonitorView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="walletViewTemplate" DataType="{x:Type viewmodels:WalletViewModel}">
            <views:WalletView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="workerViewTemplate" DataType="{x:Type viewmodels:WorkerViewModel}">
            <views:WorkerView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="profitabilityViewTemplate" DataType="{x:Type viewmodels:ProfitabilityViewModel}">
            <views:ProfitabilityView DataContext="{Binding}"/>
        </DataTemplate>

        <Style x:Key="DataGridRowHeaderStyleGPU" TargetType="{x:Type DataGridRowHeader}"  >
            <Setter Property="Visibility" Value="Hidden" />
            <Setter Property="Background" Value="#2d2d2d" />
            <Setter Property="Foreground" Value="#646464" />            <Setter Property = "FontSize" Value = "14" />
            <Setter Property = "FontWeight" Value = "Bold" />
            <Setter Property = "BorderBrush" Value = "#212121" />
            <Setter Property = "Width" Value = "0" />
            <Setter Property = "HorizontalContentAlignment" Value = "Right" />
            <Setter Property = "HorizontalAlignment" Value = "Right" />
        </Style>

        <Style x:Key="DataGridColumnHeaderStyleGPU" TargetType="{x:Type DataGridColumnHeader}"  >
            <Setter Property="Background" Value="#2d2d2d" />
            <Setter Property="Foreground" Value="#646464" />            <Setter Property = "FontSize" Value = "10" />
            <Setter Property = "BorderBrush" Value = "#2d2d2d" />
            <Setter Property = "Margin" Value = "1" />
            <Setter Property = "HorizontalContentAlignment" Value = "Right" />
            <Setter Property = "HorizontalAlignment" Value = "Right" />
        </Style>

        <Style x:Key="DataGridCellStyleGPU"  TargetType="{x:Type DataGridCell}" >
            <Setter Property="Background" Value="#2d2d2d"/>
            <Setter Property="Foreground" Value="#FFFFFF" />            <Setter Property = "FontSize" Value = "12" />
            <Setter Property = "BorderBrush" Value = "#2d2d2d" />
            <Setter Property = "HorizontalContentAlignment" Value = "Right" />
            <Setter Property = "HorizontalAlignment" Value = "Right" />
        </Style>

        <Style x:Key="DataGridRowStyleGPU" TargetType="{x:Type DataGridRow}" >
            <Setter Property="Background" Value="#2d2d2d"/>
            <Setter Property="Foreground" Value="#FFFFFF" />            <Setter Property = "FontSize" Value = "12" />
            <Setter Property = "BorderBrush" Value = "#2d2d2d" />
            <Setter Property = "HorizontalContentAlignment" Value = "Right" />
            <Setter Property = "HorizontalAlignment" Value = "Right" />
        </Style>

        <Style x:Key="DataGridCellStyle"  TargetType="{x:Type DataGridCell}" >
            <Setter Property="Background" Value="#2d2d2d"/>
            <Setter Property="Foreground" Value="#FFFFFF" />            <Setter Property = "FontSize" Value = "12" />
            <Setter Property = "BorderBrush" Value = "#2d2d2d" />
            <Setter Property = "HorizontalContentAlignment" Value = "Right" />
            <Setter Property = "HorizontalAlignment" Value = "Right" />
        </Style>

        <viewmodels:MainWindowViewModel x:Key="mainViewModelDataSource"/>

        <converter:Converter x:Key="converter"></converter:Converter>

    </Window.Resources>

    <!--Define Form Grid-->
    <Grid Background="#212121">
        <!--Grid Columns-->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <!--Grid Rows-->
        <Grid.RowDefinitions>
            <RowDefinition Height="50"></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="60"></RowDefinition>
        </Grid.RowDefinitions>

        <!--Header-->
        <Border x:Name="BorderHeader" BorderThickness="0 0 0 1" BorderBrush="#444444" Canvas.Top="0" Canvas.Left="0" Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="10" Background="#1a1a1a" >
            <Canvas Canvas.Top="0" Canvas.Left="0" Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="10"  Background="#1a1a1a">
                <Image Source="Resources/Images/bitpool.png" Canvas.Top="12" Canvas.Left="5" Width="30" Height="30"/>

                <StackPanel Orientation="Horizontal" Canvas.Top="0" Canvas.Left="40">
                    <Label Name="LabelMainTitle" Foreground="#FFFFFF" FontWeight="Bold" FontSize="30" Content="{Binding Source={StaticResource MainWindowViewModel}, Path=LabelMainTitle, UpdateSourceTrigger=PropertyChanged}"></Label>
                    <Border Style="{StaticResource borderStyleHeaderMiningStatus}">
                        <Label  FontWeight="Bold" FontSize="20" Style="{StaticResource labelStyleFooterWhite}" Content="{Binding Source={StaticResource MainWindowViewModel}, Path=MiningStatus, UpdateSourceTrigger=PropertyChanged}"></Label>
                    </Border>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Canvas.Top="15" Canvas.Right="20">
                    <TextBlock Margin="5">
                        <Hyperlink Foreground="#444444" NavigateUri="https://bitpoolmining.com" RequestNavigate="Hyperlink_RequestNavigate">POOL WEBSITE</Hyperlink>
                    </TextBlock>
                    <TextBlock Margin="5">
                        <Hyperlink Foreground="#444444" NavigateUri="https://github.com/BitPoolMining/BitPoolMiner" RequestNavigate="Hyperlink_RequestNavigate">GITHUB</Hyperlink>
                    </TextBlock>
                    <TextBlock Margin="5">
                        <Hyperlink Foreground="#444444" NavigateUri="https://discordapp.com/invite/gxvyJuA" RequestNavigate="Hyperlink_RequestNavigate">DISCORD</Hyperlink>
                    </TextBlock>
                </StackPanel>
            </Canvas>
        </Border>

        <!--Left Menu -->
        <Expander IsExpanded="True" ExpandDirection="Left" Grid.Row="1" Grid.Column="0" Grid.RowSpan="8" Foreground="#FFFFFF" BorderBrush="#444444" Background="#1a1a1a" BorderThickness="0 4 1 4">
            <Expander.Header>
                <TextBlock Text="Main Menu">
                    <TextBlock.LayoutTransform>
                        <RotateTransform Angle="90"/>
                    </TextBlock.LayoutTransform>
                </TextBlock>
            </Expander.Header>
            <ScrollViewer Grid.Row="1" Grid.Column="0" Grid.RowSpan="8"  Background="#1a1a1a" HorizontalAlignment="Left" VerticalAlignment="Stretch" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <ScrollViewer.Resources>
                    <Style TargetType="ScrollBar">
                        <Setter Property="Background" Value="#212121" />
                        <Setter Property="BorderBrush" Value="#9f9f9f" />
                    </Style>
                </ScrollViewer.Resources>
                <Border >
                <StackPanel>

                    <!--Left Menu Rigs-->
                    <Border BorderThickness="0 4 1 4" BorderBrush="#444444" Grid.Row="1" Grid.Column="0" Grid.RowSpan="5" Background="#1a1a1a" Width="270" HorizontalAlignment="Left" VerticalAlignment="Stretch">
                        <ItemsControl 
                        x:Name="MenuStackPanelRigs" 
                        Grid.Row="1" 
                        Grid.Column="0" 
                        Grid.RowSpan="7" 
                        Width="270" 
                        Background="#1a1a1a" 
                        HorizontalAlignment="Left" 
                        VerticalAlignment="Stretch"
                        ItemsSource="{Binding Source={StaticResource MainWindowViewModel}, Path=AccountWorkersList}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Button x:Name="WorkerButton" Style="{StaticResource buttonStyleLeftMenu}" Click="WorkerButton_Clicked">
                                            <Button.CommandParameter>
                                                <MultiBinding Converter="{StaticResource converter}">
                                                    <Binding Path="WorkerName"/>
                                                    <Binding Path="CoinType"/>
                                                </MultiBinding>
                                            </Button.CommandParameter>
                                            <Button.Triggers>
                                                <EventTrigger RoutedEvent="MouseEnter">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="CadetBlue"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Button.Triggers>

                                            <StackPanel Orientation="Horizontal" >
                                                <Label Style="{StaticResource labelStyleLeftMenuGrey}" Content="{Binding WorkerName}" Width="115" />
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                                                    <Border Style="{StaticResource borderStyleLeftMenuGreySmall}">
                                                        <Label Style="{StaticResource labelStyleLeftMenuGreySmall}"  Content="{Binding Status}"/>
                                                    </Border>
                                                    <Border Style="{StaticResource borderStyleHeaderCoinType}" BorderThickness="1" BorderBrush="#444444" Padding="4 0 4 0" Margin="0 2 2 0">
                                                        <Label Foreground="#444444" Padding="4" FontSize="10" Content="{Binding CoinType}"/>
                                                    </Border>
                                                    <Image Margin="5 1 5 0" Height="20" Width="20" Source="{Binding CoinLogo}" VerticalAlignment="Top" />
                                                </StackPanel>
                                            </StackPanel>
                                        </Button>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                    </Border>

                    <!--Left Menu Settings-->
                    <Border x:Name="BorderSettings" BorderThickness="0 5 1 4" BorderBrush="#444444" Grid.Row="6" Grid.Column="0" Grid.RowSpan="3" MinHeight="250" Width="270" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                        <StackPanel x:Name="MenuStackPanelSettings" Grid.Row="6" Grid.Column="0" Grid.RowSpan="3" Width="270" MinHeight="250" Background="#1a1a1a" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                            <Button x:Name="GettingStartedButton" Style="{StaticResource buttonStyleLeftMenu}" MinHeight="55" Click="GettingStartedButton_Clicked" >
                                Getting Started
                            </Button>
                            <Button x:Name="MiningDashboardButton" Style="{StaticResource buttonStyleLeftMenu}" Click="MiningDashboardButton_Clicked">
                                Mining Dashboard
                            </Button>
                            <Button x:Name="WalletSettingsButton" Style="{StaticResource buttonStyleLeftMenu}" Click="WalletSettingsButton_Clicked">
                                Wallet Settings
                            </Button>
                            <Button x:Name="AccountSettingsButton" Style="{StaticResource buttonStyleLeftMenu}" Click="AccountSettingsButton_Clicked"
                                    featureTouring:TourHelper.ElementID="{x:Static featureTourElements:FeatureTourElementID.MainViewButtonAccountWorkerSettings}"
                                    featureTouring:TourHelper.Placement="RightCenter">
                                Account/Miner Settings
                            </Button>
                            <Button x:Name="ProfitabilityButton" Style="{StaticResource buttonStyleLeftMenu}" Click="ProfitabilityButton_Clicked">
                                Profitability
                            </Button>
                        </StackPanel>
                    </Border>

                </StackPanel>
            </Border>
            </ScrollViewer>
        </Expander>

        <!--Right Column -->
        <Expander IsExpanded="True" Foreground="#FFFFFF" Grid.Row="1" Grid.Column="9" Grid.RowSpan="8" BorderBrush="#444444" Background="#1a1a1a" BorderThickness="1 4 0 4" ExpandDirection="Right">
            <Expander.Header>
                <TextBlock Text="Quick Details">
                    <TextBlock.LayoutTransform>
                        <RotateTransform Angle="-90"/>
                    </TextBlock.LayoutTransform>
                </TextBlock>
            </Expander.Header>

            <Border x:Name="BorderRight" Width="270" HorizontalAlignment="Left" VerticalAlignment="Stretch">
                <StackPanel>

                    <!-- Mining Hashrates -->
                    <StackPanel Background="#2d2d2d" Margin="10">
                        <Label Style="{StaticResource labelStyleLeftMenuGrey}">Hashrate Per Coin</Label>
                        <DataGrid 
                            AutoGenerateColumns="False" 
                            ItemsSource="{Binding Source={StaticResource MainWindowViewModel}, Path=MinerMonitorStatListGrouped, UpdateSourceTrigger=PropertyChanged}" 
                            ScrollViewer.CanContentScroll="False" 
                            CanUserDeleteRows="False" 
                            CanUserAddRows="False" 
                            CanUserSortColumns="False" 
                            CanUserResizeColumns="False" 
                            CanUserReorderColumns="False" 
                            BorderThickness="0"
                            BorderBrush="#2d2d2d"
                            Background="#2d2d2d"
                            RowHeaderWidth="0"
                            HeadersVisibility="Column"
                            GridLinesVisibility="None"
                            Margin="0"
                            VerticalAlignment="Top"
                            VerticalContentAlignment="Top" 
                            HorizontalAlignment="Left"
                            HorizontalContentAlignment="Left"
                            ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyleGPU}"
                            RowHeaderStyle="{StaticResource DataGridRowHeaderStyleGPU}"
                            RowStyle="{StaticResource DataGridRowStyleGPU}"
                            CellStyle="{StaticResource DataGridCellStyleGPU}">
                            <DataGrid.Columns>
                                <DataGridTemplateColumn  CellStyle="{StaticResource DataGridCellStyle}">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Margin="5 0 5 5" Height="20" Width="20" Source="{Binding CoinLogo}" VerticalAlignment="Top" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Binding="{Binding CoinType}" Header="" IsReadOnly="True" CellStyle="{StaticResource DataGridCellStyle}"/>
                                <DataGridTextColumn Binding="{Binding CountStats}" Header="# Rigs" IsReadOnly="True" CellStyle="{StaticResource DataGridCellStyle}"/>
                                <DataGridTextColumn Binding="{Binding DisplayHashRate}" Header="Total Hashrate" IsReadOnly="True" CellStyle="{StaticResource DataGridCellStyle}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>

                    <!-- Forecast data from WhatToMine -->
                    <StackPanel  Background="#2d2d2d" Margin="10" DataContext="{Binding Source={StaticResource MainWindowViewModel}, Path=WhatToMineData, UpdateSourceTrigger=PropertyChanged}">
                        <Label Style="{StaticResource labelStyleLeftMenuGrey}">Rough Forecast Last 24 Hours</Label>
                        <DataGrid 
                            AutoGenerateColumns="False" 
                            ItemsSource="{Binding WhatToMineResponseList}" 
                            ScrollViewer.CanContentScroll="False" 
                            CanUserDeleteRows="False" 
                            CanUserAddRows="False" 
                            CanUserSortColumns="False" 
                            CanUserResizeColumns="False" 
                            CanUserReorderColumns="False" 
                            BorderThickness="0"
                            BorderBrush="#2d2d2d"
                            Background="#2d2d2d"
                            RowHeaderWidth="0"
                            HeadersVisibility="Column"
                            GridLinesVisibility="None"
                            Margin="0"
                            VerticalAlignment="Top"
                            VerticalContentAlignment="Top" 
                            HorizontalAlignment="Left"
                            HorizontalContentAlignment="Left"
                            ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyleGPU}"
                            RowHeaderStyle="{StaticResource DataGridRowHeaderStyleGPU}"
                            RowStyle="{StaticResource DataGridRowStyleGPU}"
                            CellStyle="{StaticResource DataGridCellStyleGPU}">
                            <DataGrid.Columns>
                                <DataGridTemplateColumn  CellStyle="{StaticResource DataGridCellStyle}">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Margin="5 0 5 5" Height="20" Width="20" Source="{Binding CoinLogo}" VerticalAlignment="Top" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Binding="{Binding tag}" Header="" IsReadOnly="True" CellStyle="{StaticResource DataGridCellStyle}"/>
                                <DataGridTextColumn Binding="{Binding Revenue}" Header="FIAT" IsReadOnly="True" CellStyle="{StaticResource DataGridCellStyle}"/>
                                <DataGridTextColumn Binding="{Binding Estimated_rewards}" Header="COINS" IsReadOnly="True" CellStyle="{StaticResource DataGridCellStyle}"/>
                                <DataGridTextColumn Binding="{Binding BTC_revenue}" Header="BTC" IsReadOnly="True" CellStyle="{StaticResource DataGridCellStyle}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>

                    <!-- Actual revenue last 24 hours -->
                    <StackPanel Background="#2d2d2d" Margin="10" DataContext="{Binding Source={StaticResource MainWindowViewModel}, Path=MinerPaymentsData, UpdateSourceTrigger=PropertyChanged}">
                        <Label Style="{StaticResource labelStyleLeftMenuGrey}">Actual Revenue Last 24 Hours</Label>
                        <DataGrid 
                            AutoGenerateColumns="False" 
                            ItemsSource="{Binding MinerPaymentSummaryList}" 
                            ScrollViewer.CanContentScroll="False" 
                            CanUserDeleteRows="False" 
                            CanUserAddRows="False" 
                            CanUserSortColumns="False" 
                            CanUserResizeColumns="False" 
                            CanUserReorderColumns="False" 
                            BorderThickness="0"
                            BorderBrush="#2d2d2d"
                            Background="#2d2d2d"
                            RowHeaderWidth="0"
                            HeadersVisibility="Column"
                            GridLinesVisibility="None"
                            Margin="0"
                            VerticalAlignment="Top"
                            VerticalContentAlignment="Top" 
                            HorizontalAlignment="Left"
                            HorizontalContentAlignment="Left"
                            ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyleGPU}"
                            RowHeaderStyle="{StaticResource DataGridRowHeaderStyleGPU}"
                            RowStyle="{StaticResource DataGridRowStyleGPU}"
                            CellStyle="{StaticResource DataGridCellStyleGPU}">
                            <DataGrid.Columns>
                                <DataGridTemplateColumn  CellStyle="{StaticResource DataGridCellStyle}">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Margin="5 0 5 5" Height="20" Width="20" Source="{Binding CoinLogo}" VerticalAlignment="Top" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Binding="{Binding CoinType}" Header="" IsReadOnly="True" CellStyle="{StaticResource DataGridCellStyle}"/>
                                <DataGridTextColumn Binding="{Binding RevenueLast24HourUSD}" Header="FIAT" IsReadOnly="True" CellStyle="{StaticResource DataGridCellStyle}"/>
                                <DataGridTextColumn Binding="{Binding RevenueLast24HourCoin}" Header="COINS" IsReadOnly="True" CellStyle="{StaticResource DataGridCellStyle}"/>
                                <DataGridTextColumn Binding="{Binding RevenueLast24HourBTC}" Header="BTC" IsReadOnly="True" CellStyle="{StaticResource DataGridCellStyle}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>

                </StackPanel>
            </Border>
        </Expander>

        <!--Body-->
        <ScrollViewer Background="#262626" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="8" Grid.RowSpan="8" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <ScrollViewer.Resources>
                <Style TargetType="ScrollBar">
                    <Setter Property="Background" Value="#212121" />
                    <Setter Property="BorderBrush" Value="#9f9f9f" />
                </Style>
            </ScrollViewer.Resources>
            <ContentControl Content="{Binding}" />
        </ScrollViewer>

        <!--Footer-->
        <Border x:Name="BorderFooter" BorderThickness="0 1 0 0" BorderBrush="#444444" Grid.Row="9" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="10" Background="#1a1a1a">
            <StackPanel Orientation="Horizontal">

                <StackPanel Orientation="Vertical" Margin="20 0 0 0" DataContext="{Binding Source={StaticResource MainWindowViewModel}, Path=MinerPaymentsData, UpdateSourceTrigger=PropertyChanged}">
                    <StackPanel Orientation="Horizontal">
                        <Label Style="{StaticResource labelStyleFooterGrey}">Revenue Last 24h</Label>
                        <Label Style="{StaticResource labelStyleFooterGrey}" Content="{Binding FiatCurrencySymbol}"></Label>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Style="{StaticResource labelStyleFooterGrey}">Revenue Last 24h</Label>
                        <Label Style="{StaticResource labelStyleFooterGrey}">BTC</Label>
                    </StackPanel>
                </StackPanel>

                <StackPanel Orientation="Vertical" DataContext="{Binding Source={StaticResource MainWindowViewModel}, Path=MinerPaymentsData, UpdateSourceTrigger=PropertyChanged}">
                    <Label Style="{StaticResource labelStyleFooterWhite}" Content="{Binding RevenueLast24HourUSD}"></Label>
                    <Label Style="{StaticResource labelStyleFooterWhite}" Content="{Binding RevenueLast24HourBTC}"></Label>
                </StackPanel>

                <StackPanel Orientation="Vertical" Margin="40 0 0 0" DataContext="{Binding Source={StaticResource MainWindowViewModel}, Path=MinerPaymentsData, UpdateSourceTrigger=PropertyChanged}">
                    <StackPanel Orientation="Horizontal">
                        <Label Style="{StaticResource labelStyleFooterGrey}">Rough Forecast Last 24h</Label>
                        <Label Style="{StaticResource labelStyleFooterGrey}" Content="{Binding FiatCurrencySymbol}"></Label>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Style="{StaticResource labelStyleFooterGrey}">Rough Forecast Last 24h</Label>
                        <Label Style="{StaticResource labelStyleFooterGrey}">BTC</Label>
                    </StackPanel>
                </StackPanel>




                <StackPanel Orientation="Vertical" DataContext="{Binding Source={StaticResource MainWindowViewModel}, Path=WhatToMineData, UpdateSourceTrigger=PropertyChanged}">
                    <Label Style="{StaticResource labelStyleFooterWhite}" Content="{Binding ForecastNext24HourUSD}"></Label>
                    <Label Style="{StaticResource labelStyleFooterWhite}" Content="{Binding ForecastNext24HourBTC}"></Label>
                </StackPanel>

                <StackPanel Orientation="Vertical" Margin="40 0 0 0">
                    <Label Style="{StaticResource labelStyleFooterGrey}">Workers Online:</Label>
                    <Label Style="{StaticResource labelStyleFooterGrey}">Workers Offline:</Label>
                </StackPanel>
                <StackPanel Orientation="Vertical">
                    <Label Style="{StaticResource labelStyleFooterWhite}" Content="{Binding Source={StaticResource MainWindowViewModel}, Path=WorkersOnline, UpdateSourceTrigger=PropertyChanged}"></Label>
                    <Label Style="{StaticResource labelStyleFooterWhite}" Content="{Binding Source={StaticResource MainWindowViewModel}, Path=WorkersOffline, UpdateSourceTrigger=PropertyChanged}"></Label>
                </StackPanel>

                <StackPanel Orientation="Vertical" Margin="40 0 0 0">
                    <Label Style="{StaticResource labelStyleFooterGrey}">NVidia GPU:</Label>
                    <Label Style="{StaticResource labelStyleFooterGrey}">AMD GPU:</Label>
                </StackPanel>
                <StackPanel Orientation="Vertical">
                    <Label Style="{StaticResource labelStyleFooterWhite}" Content="{Binding Source={StaticResource MainWindowViewModel}, Path=NvidiaOnline, UpdateSourceTrigger=PropertyChanged}"></Label>
                    <Label Style="{StaticResource labelStyleFooterWhite}" Content="{Binding Source={StaticResource MainWindowViewModel}, Path=AMDOnline, UpdateSourceTrigger=PropertyChanged}"></Label>
                </StackPanel>
                <StackPanel Orientation="Vertical">
                    <Label Style="{StaticResource labelStyleFooterWhite}" Content="{Binding Source={StaticResource MainWindowViewModel}, Path=NvidiaOffline, UpdateSourceTrigger=PropertyChanged}"></Label>
                    <Label Style="{StaticResource labelStyleFooterWhite}" Content="{Binding Source={StaticResource MainWindowViewModel}, Path=AMDOffline, UpdateSourceTrigger=PropertyChanged}"></Label>
                </StackPanel>

                <StackPanel Orientation="Vertical" Margin="40 0 0 0">
                    <Label Style="{StaticResource labelStyleFooterGrey}">Version:</Label>
                    <Label Style="{StaticResource labelStyleFooterGrey}">Total Power:</Label>
                </StackPanel>
                <StackPanel Orientation="Vertical">
                    <Label Style="{StaticResource labelStyleFooterWhite}" Content="{Binding Source={StaticResource MainWindowViewModel}, Path=VersionNumber, UpdateSourceTrigger=PropertyChanged}"></Label>
                    <Label Style="{StaticResource labelStyleFooterWhite}" Content="{Binding Source={StaticResource MainWindowViewModel}, Path=TotalPower, UpdateSourceTrigger=PropertyChanged}"></Label>
                </StackPanel>

                <!-- Mining Buttons -->
                <Button x:Name="ButtonStartMining" Style="{StaticResource buttonStyleFooterStart}" Command="{Binding CommandStartMining}" Click="ButtonStartMining_Click">
                    START MINING
                </Button>
                <Button x:Name="ButtonStopMining" IsEnabled="False" Style="{StaticResource buttonStyleFooterStop}" Command="{Binding CommandStopMining}" Click="ButtonStopMining_Click">
                    STOP MINING
                </Button>
                <!-- Mining Buttons -->

            </StackPanel>
        </Border>
    </Grid>

</Window>

    